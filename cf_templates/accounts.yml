Description: Setup IAM policies, groups and accounts
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  InitNewUserPassword:
    Type: String
    NoEcho: true
Resources:
  # !! IMPORTANT !! - AWS API will refuse to remove users that have attached resources.
  # Therefore you must do the following before deleting them from this file:
  # 1. Detach or remove the following user resources: login profile, attached
  #    MFA device, access-keys, ssh-keys, and policies.
  # 2. Detach the user from all groups.
  AWSIAMXavierSchildwachterUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: x.schildwachter@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMKhaiDoUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: khai.do@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

   AWSIAMAbhishekPratapUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: abhishek.pratap@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMAlxDarkUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: alx.dark@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMAmyTruongUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: amy.truong@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMAndrewLambUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: andrew.lamb@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMBenLogsdonUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: ben.logsdon@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMBrianBotUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: brian.bot@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMBrianWhiteUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: brian.white@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMBruceHoffUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: bruce.hoff@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMChristineSuverUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: christine.suver@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMDanWebsterUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: dan.webster@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMDavidLahtiUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: david.lahti@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMDianeGaryUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: diane.gary@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMDwayneJengUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: dwayne.jeng@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMEliasChaibubNetoUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: elias.chaibub.neto@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMErinMountsUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: erin.mounts@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMJamesEddyUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: james.eddy@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMJayHodgsonUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: jay.hodgson@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMJenniferHamannUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: jennifer.hamann@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMJohnHillUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: john.hill@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMJohnWilbanksUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: john.wilbanks@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMJoshuaLiuUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: joshua.liu@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMJulieBletzUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: julie.bletz@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMJustinGuinneyUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: justin.guinney@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMKaraWooUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: kara.woo@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMKennethDailyUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: kenneth.daily@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMKevinLiUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: kevin.li@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMKhaiDoUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: khai.do@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMKimyenTruongUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: kimyen.truong@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMKristenDangUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: kristen.dang@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMLaraMangraviteUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: lara.mangravite@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMLarssonOmbergUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: larsson.omberg@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMMeganDoerrUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: megan.doerr@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMMeghasyamUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: meghasyam@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMMeredithSlotaUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: meredith.slota@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMMettePetersUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: mette.peters@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMMichaelMasonUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: michael.mason@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMMikeKellenUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: mike.kellen@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMNasimSanatiUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: nasim.sanati@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMPhilSnyderUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: phil.snyder@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMRobertAllawayUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: robert.allaway@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMSara.GoslineUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: sara.gosline@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMSarahMooreUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: sarah.moore@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMShannonYoungUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: shannon.young@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMSollySiebertsUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: solly.sieberts@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMStockardSimonUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: stockard.simon@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMThanneerPerumalUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: thanneer.perumal@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMThomasYuUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: thomas.yu@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  # AWSIAMVanessaBaroneUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: vanessa.barone@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMWoodyMacduffieUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: woody.macduffie@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  # AWSIAMXSchildwachterUser:
  #   Type: 'AWS::IAM::User'
  #   Properties:
  #     UserName: x.schildwachter@sagebase.org
  #     Groups:
  #       - !Ref AWSIAMDeveloperUsersGroup
  #     LoginProfile:
  #       Password: !Ref InitNewUserPassword
  #       PasswordResetRequired: true

  AWSIAMXindiGuoUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: xindi.guo@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMYooreeChaeUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: yooree.chae@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true

  AWSIAMZimingDongUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: ziming.dong@sagebase.org
      Groups:
        - !Ref AWSIAMDeveloperUsersGroup
      LoginProfile:
        Password: !Ref InitNewUserPassword
        PasswordResetRequired: true
 
  AWSIAMDeveloperUsersGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - !Ref AWSIAMEnforceMfaPolicy
        - !Ref AWSIAMDynamoDenyDeletePolicy
        - !Ref AWSIAMRdsDenyDeletePolicy  AWSIAMAdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS:
                - !GetAtt AWSIAMXavierSchildwachterUser.Arn
                - !GetAtt AWSIAMKhaiDoUser.Arn
            Action:
              - "sts:AssumeRole"
      Path: "/"
  AWSIAMDynamoDenyDeletePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Deny
            Action:
              # UpdateTable operation retricts deletion of indexes
              - dynamodb:UpdateTable
              - dynamodb:DeleteTable
            Resource: "*"
  AWSIAMRdsDenyDeletePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Deny
            Action:
              - rds:DeleteDBCluster
              - rds:DeleteDBClusterSnapshot
              - rds:DeleteDBInstance
              - rds:DeleteDBSnapshot
            Resource: "*"
  AWSIAMAdminRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "admin"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles:
        -
          !Ref AWSIAMAdminRole
  AWSIAMInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        -
          !Ref "AWSIAMAdminRole"
  # resources for auditors
  AWSIAMAuditorAccessPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Deny
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - codecommit:GetCommit
            - codecommit:GitPull
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:GetRecords
            - sqs:ReceiveMessage
            - sdb:Select
            Resource: "*"
  AWSIAMAuditorsGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !Ref AWSIAMAuditorAccessPolicy
        - !Ref AWSIAMEnforceMfaPolicy
  # resources for logging services
  IAMLoggingServiceManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:ListBucketVersions'
              - 's3:ListBucket'
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::elasticbeanstalk-'
                  - !Ref AWS::Region
                  - '-'
                  - !Ref AWS::AccountId
                  - '/*'
              - !Join
                - ''
                - - 'arn:aws:s3:::elasticbeanstalk-'
                  - !Ref AWS::Region
                  - '-'
                  - !Ref AWS::AccountId
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !ImportValue us-east-1-essentials-CloudtrailBucket
                  - '/*'
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !ImportValue us-east-1-essentials-CloudtrailBucket
  AWSIAMLoggingServiceGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - !Ref IAMLoggingServiceManagedPolicy
  # policy to enforce MFA
  AWSIAMEnforceMfaPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAllUsersToListAccounts
            Effect: Allow
            Action:
              - 'iam:ListAccountAliases'
              - 'iam:ListUsers'
              - 'iam:GetAccountSummary'
            Resource: '*'
          - Sid: AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation
            Effect: Allow
            Action:
              - 'iam:ChangePassword'
              - 'iam:CreateAccessKey'
              - 'iam:CreateLoginProfile'
              - 'iam:DeleteAccessKey'
              - 'iam:DeleteLoginProfile'
              - 'iam:GetAccountPasswordPolicy'
              - 'iam:GetLoginProfile'
              - 'iam:ListAccessKeys'
              - 'iam:UpdateAccessKey'
              - 'iam:UpdateLoginProfile'
              - 'iam:ListSigningCertificates'
              - 'iam:DeleteSigningCertificate'
              - 'iam:UpdateSigningCertificate'
              - 'iam:UploadSigningCertificate'
              - 'iam:ListSSHPublicKeys'
              - 'iam:GetSSHPublicKey'
              - 'iam:DeleteSSHPublicKey'
              - 'iam:UpdateSSHPublicKey'
              - 'iam:UploadSSHPublicKey'
            Resource: !Join
              - ''
              - - 'arn:aws:iam::'
                - !Ref AWS::AccountId
                - ':user/${aws:username}'
          - Sid: AllowIndividualUserToListOnlyTheirOwnMFA
            Effect: Allow
            Action:
              - 'iam:ListVirtualMFADevices'
              - 'iam:ListMFADevices'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':mfa/*'
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':user/${aws:username}'
          - Sid: AllowIndividualUserToManageTheirOwnMFA
            Effect: Allow
            Action:
              - 'iam:CreateVirtualMFADevice'
              - 'iam:DeleteVirtualMFADevice'
              - 'iam:RequestSmsMfaRegistration'
              - 'iam:FinalizeSmsMfaRegistration'
              - 'iam:EnableMFADevice'
              - 'iam:ResyncMFADevice'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':mfa/${aws:username}'
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':user/${aws:username}'
          - Sid: AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA
            Effect: Allow
            Action:
              - 'iam:DeactivateMFADevice'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':mfa/${aws:username}'
              - !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref AWS::AccountId
                  - ':user/${aws:username}'
            Condition:
              Bool:
                'aws:MultiFactorAuthPresent': 'true'
          - Sid: BlockAnyAccessOtherThanAboveUnlessSignedInWithMFA
            Effect: Deny
            NotAction: 'iam:*'
            Resource: '*'
            Condition:
              BoolIfExists:
                'aws:MultiFactorAuthPresent': 'false'
Outputs:
  AWSIAMEnforceMfaPolicy:
    Value: !Ref AWSIAMEnforceMfaPolicy
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-EnforceMfaPolicy'
